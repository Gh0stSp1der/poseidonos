// generated by config module

#include "src/api/Air.h"
#include "src/api/AirTemplate.h"

extern "C"
void AIR_INITIALIZE(uint32_t cpu_num) {
    AIR<cfg::GetIntValue(config::ConfigType::DEFAULT, "AirBuild"), true>::Initialize(cpu_num);
}

extern "C"
void AIR_ACTIVATE(void) {
    AIR<cfg::GetIntValue(config::ConfigType::DEFAULT, "AirBuild"), true>::Activate();
}

extern "C"
void AIR_DEACTIVATE(void) {
    AIR<cfg::GetIntValue(config::ConfigType::DEFAULT, "AirBuild"), true>::Deactivate();
}

extern "C"
void AIR_FINALIZE(void) {
    AIR<cfg::GetIntValue(config::ConfigType::DEFAULT, "AirBuild"), true>::Finalize();
}

extern "C"
void AIR_PERF_VOLUME(uint64_t aid, uint64_t value1, uint64_t value2) {
    AIR<cfg::GetIntValue(config::ConfigType::DEFAULT, "AirBuild"),
    cfg::GetIntValue(config::ConfigType::NODE, "NodeBuild", "PERF_VOLUME")>
    ::LogData<cfg::GetIndex(config::ConfigType::NODE, "PERF_VOLUME")>(aid, value1, value2);
}

extern "C"
void AIR_LAT_BDEV_READ(uint64_t aid, uint64_t value1, uint64_t value2) {
    AIR<cfg::GetIntValue(config::ConfigType::DEFAULT, "AirBuild"),
    cfg::GetIntValue(config::ConfigType::NODE, "NodeBuild", "LAT_BDEV_READ")>
    ::LogData<cfg::GetIndex(config::ConfigType::NODE, "LAT_BDEV_READ")>(aid, value1, value2);
}

extern "C"
void AIR_LAT_BDEV_WRITE(uint64_t aid, uint64_t value1, uint64_t value2) {
    AIR<cfg::GetIntValue(config::ConfigType::DEFAULT, "AirBuild"),
    cfg::GetIntValue(config::ConfigType::NODE, "NodeBuild", "LAT_BDEV_WRITE")>
    ::LogData<cfg::GetIndex(config::ConfigType::NODE, "LAT_BDEV_WRITE")>(aid, value1, value2);
}

extern "C"
void AIR_PERF_METAFS_IO(uint64_t aid, uint64_t value1, uint64_t value2) {
    AIR<cfg::GetIntValue(config::ConfigType::DEFAULT, "AirBuild"),
    cfg::GetIntValue(config::ConfigType::NODE, "NodeBuild", "PERF_METAFS_IO")>
    ::LogData<cfg::GetIndex(config::ConfigType::NODE, "PERF_METAFS_IO")>(aid, value1, value2);
}

extern "C"
void AIR_Q_AIO(uint64_t aid, uint64_t value1, uint64_t value2) {
    AIR<cfg::GetIntValue(config::ConfigType::DEFAULT, "AirBuild"),
    cfg::GetIntValue(config::ConfigType::NODE, "NodeBuild", "Q_AIO")>
    ::LogData<cfg::GetIndex(config::ConfigType::NODE, "Q_AIO")>(aid, value1, value2);
}

extern "C"
void AIR_Q_NVRAM(uint64_t aid, uint64_t value1, uint64_t value2) {
    AIR<cfg::GetIntValue(config::ConfigType::DEFAULT, "AirBuild"),
    cfg::GetIntValue(config::ConfigType::NODE, "NodeBuild", "Q_NVRAM")>
    ::LogData<cfg::GetIndex(config::ConfigType::NODE, "Q_NVRAM")>(aid, value1, value2);
}

extern "C"
void AIR_Q_SSD(uint64_t aid, uint64_t value1, uint64_t value2) {
    AIR<cfg::GetIntValue(config::ConfigType::DEFAULT, "AirBuild"),
    cfg::GetIntValue(config::ConfigType::NODE, "NodeBuild", "Q_SSD")>
    ::LogData<cfg::GetIndex(config::ConfigType::NODE, "Q_SSD")>(aid, value1, value2);
}

extern "C"
void AIR_Q_EVENT(uint64_t aid, uint64_t value1, uint64_t value2) {
    AIR<cfg::GetIntValue(config::ConfigType::DEFAULT, "AirBuild"),
    cfg::GetIntValue(config::ConfigType::NODE, "NodeBuild", "Q_EVENT")>
    ::LogData<cfg::GetIndex(config::ConfigType::NODE, "Q_EVENT")>(aid, value1, value2);
}

extern "C"
void AIR_Q_IO(uint64_t aid, uint64_t value1, uint64_t value2) {
    AIR<cfg::GetIntValue(config::ConfigType::DEFAULT, "AirBuild"),
    cfg::GetIntValue(config::ConfigType::NODE, "NodeBuild", "Q_IO")>
    ::LogData<cfg::GetIndex(config::ConfigType::NODE, "Q_IO")>(aid, value1, value2);
}

extern "C"
void AIR_PERF_COPY(uint64_t aid, uint64_t value1, uint64_t value2) {
    AIR<cfg::GetIntValue(config::ConfigType::DEFAULT, "AirBuild"),
    cfg::GetIntValue(config::ConfigType::NODE, "NodeBuild", "PERF_COPY")>
    ::LogData<cfg::GetIndex(config::ConfigType::NODE, "PERF_COPY")>(aid, value1, value2);
}

extern "C"
void AIR_DONOTHING(void) {
}