
name: M3-NonFunctional_PSD_Test

on:
  workflow_run:
    workflows: [M2_Functional_PSD_Test]
    types: [completed]
    
  workflow_dispatch:
    inputs:
       logLevel:
          description: 'Log level'     
          required: true
          default: 'warning'
       tags:
          description: 'Test scenario tags'

jobs:
  Prepare_Dashboard_Link:
    if: always()
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Make Dashboard Link for Workflow 
      run: |
        POS_WORKING_DIR=${{github.workspace}} GA_COMMIT_HASH=${{github.sha}} GA_WORKFLOW=${{github.workflow}} GRAFANA_DASHBOARD="${{secrets.GRAFANA_GITHUB_ACTION_DASHBAORD_LINK}}" bash ${{github.workspace}}/.github/workflows/script/setup_dashboard.sh

    - name: Upload Dashboard Link
      uses: actions/upload-artifact@v3
      with:
        name: ${{github.workflow}}-Dashboard
        path: |
          ${{github.workspace}}/Dashboard.html

  Performance_Test:
    runs-on: PSD
    if: ${{ github.event.workflow_run.conclusion == 'success' }} && runner.name == 'psd'
    steps:
    
    - run: |
        sudo chown -R $USER:$USER $GITHUB_WORKSPACE

    - uses: actions/checkout@v2

    - name: Build Setup
      working-directory: ${{github.workspace}}
      run: | 
        chmod +x .github/workflows/script/build_setup_165.sh
        .github/workflows/script/build_setup_165.sh -i ${{secrets.PSD_IP}} -t PSD -r ${{github.sha}} -d ${{github.workspace}}

    - name: Setup Initiator
      working-directory: ${{github.workspace}}
      run: | 
        chmod +x .github/workflows/script/initiator_setup.sh
        .github/workflows/script/initiator_setup.sh ${{secrets.PSD_INITIATOR_IP}} ${{secrets.PSD_INITIATOR_PASSWD}} ${{secrets.PSD_INITIATOR_WORKING_DIR}} ${{github.sha}}

    - name: Performance Test - with Journal Off
      id: with_journal_off
      working-directory: ${{github.workspace}}
      run: |
        POS_WORKING_DIR=${{github.workspace}} GA_COMMIT_HASH=${{github.sha}} GA_WORKFLOW=${{github.workflow}} GA_DETAIL=${{github.job}}_${{github.action}} POS_EXPORTER_PORT=${{secrets.POS_EXPORTER_PORT}} AMP_REMOTE_WRITE_URL=${{secrets.AMP_REMOTE_WRITE_URL}} AMP_SIGV4_REGION=${{secrets.AMP_SIGV4_REGION}} AMP_SIGV4_ACCESS_KEY=${{secrets.AMP_SIGV4_ACCESS_KEY}} AMP_SIGV4_SECRET_KEY=${{secrets.AMP_SIGV4_SECRET_KEY}} bash ${{github.workspace}}/.github/workflows/script/setup_monitoring.sh
        test/system/nvmf/initiator/automated/performance_test_ci.py -f ${{secrets.PSD_FABRIC_IP}} -t ${{secrets.PSD_IP}} -i ${{secrets.PSD_INITIATOR_IP}} -cf ibofos_for_perf_ci.conf -tr ${{github.sha}}_journal_off -tn POS_devel -r ${{github.workspace}} -n ${{secrets.TARGET_NIC}}
        sshpass -p ${{secrets.PSD_INITIATOR_PASSWD}} scp -o StrictHostKeyChecking=no root@${{secrets.PSD_INITIATOR_IP}}:${{secrets.INITIATOR_WORKING_DIR}}/AP_POS_${{github.sha}}_journal_off.csv ${{github.workspace}}

    - name: Performance Test - with Journal
      id: with_journal
      working-directory: ${{github.workspace}}
      env:
        SW_128K_LIMIT: 0
        SR_128K_LIMIT: 0
        RW_4K_LIMIT: 0
        RR_4k_LIMIT: 0
      run: |
        POS_WORKING_DIR=${{github.workspace}} GA_COMMIT_HASH=${{github.sha}} GA_WORKFLOW=${{github.workflow}} GA_DETAIL=${{github.job}}_${{github.action}} POS_EXPORTER_PORT=${{secrets.POS_EXPORTER_PORT}} AMP_REMOTE_WRITE_URL=${{secrets.AMP_REMOTE_WRITE_URL}} AMP_SIGV4_REGION=${{secrets.AMP_SIGV4_REGION}} AMP_SIGV4_ACCESS_KEY=${{secrets.AMP_SIGV4_ACCESS_KEY}} AMP_SIGV4_SECRET_KEY=${{secrets.AMP_SIGV4_SECRET_KEY}} bash ${{github.workspace}}/.github/workflows/script/setup_monitoring.sh
        sudo jq -r  '.journal.enable |= true'  config/ibofos_for_perf_ci.conf > config/tmp.conf
        test/system/nvmf/initiator/automated/performance_test_ci.py -f ${{secrets.PSD_FABRIC_IP}} -t ${{secrets.PSD_IP}} -i ${{secrets.PSD_INITIATOR_IP}} -cf tmp.conf -tr ${{github.sha}}_journal_on -tn POS_journal -sw $SW_128K_LIMIT -sr $SR_128K_LIMIT -rw $RW_4K_LIMIT -rr $RR_4K_LIMIT -r ${{github.workspace}} -n ${{secrets.TARGET_NIC}}
        sshpass -p ${{secrets.PSD_INITIATOR_PASSWD}} scp -o StrictHostKeyChecking=no root@{{secrets.PSD_INITIATOR_IP}}:${{secrets.PSD_INITIATOR_WORKING_DIR}}/AP_POS_${{github.sha}}_journal_on.csv ${{github.workspace}}

    - name: Clean Backup
      continue-on-error: true
      if: always()
      working-directory: ${{github.workspace}}
      run: |
        chmod +x .github/workflows/script/clean_backup_165.sh
        .github/workflows/script/clean_backup_165.sh -i ${{secrets.PSD_IP}} -p "M3-NonFunctional_PM_Test" -n "performance" -r ${{github.sha}} -d ${{github.workspace}}

  Sustained_Performance_test:
    runs-on: PSD
    if: ${{ github.event.workflow_run.conclusion == 'success' }} && runner.name == 'psd'
    steps:
  
    - run: |
        sudo chown -R $USER:$USER $GITHUB_WORKSPACE

    - uses: actions/checkout@v2

    - name: Setup Init 1
      working-directory: ${{github.workspace}}
      run: | 
        chmod +x .github/workflows/script/initiator_setup.sh
        .github/workflows/script/initiator_setup.sh ${{secrets.PSD_INITIATOR_IP}} ${{secrets.PSD_INITIATOR_PASSWD}} ${{secrets.PSD_INITIATOR_WORKING_DIR}} ${{github.sha}}

    - name: Setup Init 2
      working-directory: ${{github.workspace}}
      run: | 
        chmod +x .github/workflows/script/initiator_setup.sh
        .github/workflows/script/initiator_setup.sh ${{secrets.PSD_INITIATOR2_IP}} ${{secrets.PSD_INITIATOR2_PASSWD}} ${{secrets.PSD_INITIATOR2_WORKING_DIR}} ${{github.sha}}

    - name: Short-term Sustained Write
      working-directory: ${{github.workspace}}
      run: | 
        POS_WORKING_DIR=${{github.workspace}} GA_COMMIT_HASH=${{github.sha}} GA_WORKFLOW=${{github.workflow}} GA_DETAIL=${{github.job}} POS_EXPORTER_PORT=${{secrets.POS_EXPORTER_PORT}} AMP_REMOTE_WRITE_URL=${{secrets.AMP_REMOTE_WRITE_URL}} AMP_SIGV4_REGION=${{secrets.AMP_SIGV4_REGION}} AMP_SIGV4_ACCESS_KEY=${{secrets.AMP_SIGV4_ACCESS_KEY}} AMP_SIGV4_SECRET_KEY=${{secrets.AMP_SIGV4_SECRET_KEY}} bash ${{github.workspace}}/.github/workflows/script/setup_monitoring.sh
        chmod +x .github/workflows/script/performance/sustained.sh
        .github/workflows/script/performance/sustained.sh ${{secrets.PSD_IP}} ${{secrets.PSD_FABRIC_IP}} ${{secrets.PSD_FABRIC_IP2}} ${{secrets.PSD_INITIATOR_IP}} ${{secrets.PSD_INITIATOR2_IP}} ${{github.workspace}} ${{github.sha}} ${{secrets.PSD_INITIATOR_WORKING_DIR}}  ${{secrets.PSD_INITIATOR2_WORKING_DIR}} 

    - name: Save Artifacts
      working-directory: ${{github.workspace}}
      run: | 
        chmod +x .github/workflows/script/save_artifacts.sh
        .github/workflows/script/save_artifacts.sh ${{secrets.PSD_IP}} ${{github.workspace}}

  on-failure:
    runs-on: PSD
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo 'The triggering workflow failed'